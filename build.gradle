/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    id "java"
    id 'java-library'
    id 'application'

    id "net.ltgt.apt-idea" version "0.21"
    id "net.ltgt.apt-eclipse" version "0.21"

    id "com.github.johnrengelman.shadow" version "5.2.0"
    id "io.spring.dependency-management" version "1.0.11.RELEASE"
}

jar {
    manifest {
        attributes(
                'Main-Class': 'bitimage.Application',
                "Class-Path": configurations.compile.collect { it.getName() }.join(' ')
        )
    }
}

mainClassName = 'bitimage.Application'

repositories {
    jcenter()
}

ext {
    micronautVersion = "1.3.4"
    micronautSpringVersion = "2.0.0"
}

dependencyManagement {
    imports {
        mavenBom "io.micronaut:micronaut-bom:$micronautVersion"
    }
}

shadowJar {
    mergeServiceFiles()
}

test.testLogging.showStandardStreams = true

ext['micronaut.spring.version'] = micronautSpringVersion
dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:27.1-jre'

    // Use Micronaut server framework
    annotationProcessor "io.micronaut:micronaut-inject-java"
    annotationProcessor "io.micronaut:micronaut-validation"
    annotationProcessor "io.micronaut.configuration:micronaut-openapi"
    implementation "io.swagger.core.v3:swagger-annotations"
    implementation "io.micronaut:micronaut-inject"
    implementation "io.micronaut:micronaut-validation"
    implementation("io.micronaut:micronaut-http-server")    
    implementation("io.micronaut:micronaut-http-server-netty")
    runtimeOnly "ch.qos.logback:logback-classic:1.2.3"
    runtimeOnly "ognl:ognl:3.1.12"
    testImplementation("io.micronaut:micronaut-http-client")
    testImplementation("io.micronaut.test:micronaut-test-junit5")
    testImplementation "org.junit.jupiter:junit-jupiter-api"
    testImplementation "io.micronaut:micronaut-inject-java"
    testImplementation "org.mockito:mockito-junit-jupiter:2.22.0"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine"
    testAnnotationProcessor "io.micronaut:micronaut-inject-java"

    // Use AWS S3 and Rekognition SDK
    implementation platform('com.amazonaws:aws-java-sdk-bom:1.11.926')
    implementation 'com.amazonaws:aws-java-sdk-s3'
    implementation 'com.amazonaws:aws-java-sdk-rekognition'

    // Use Bean validation 
    implementation("io.micronaut.configuration:micronaut-hibernate-validator")

    // Use Beanstalk job queue
    implementation(group: 'com.dinstone', name: 'beanstalkc', version: '2.3.0')

    // Use java injector annotations
    implementation(group: 'javax.ws.rs', name: 'javax.ws.rs-api', version: '2.1.1')
    implementation(group: 'javax.inject', name: 'javax.inject', version: '1')

    // Use Postgres driver
    implementation(group: 'commons-dbcp', name: 'commons-dbcp', version: '1.4')
    implementation(group: 'org.postgresql', name: 'postgresql', version: '42.1.4')

    // Use http request library
    implementation(group: 'com.squareup.okhttp3', name: 'okhttp', version: '4.9.0')
}

run {
    systemProperty('micronaut.config.files', './src/main/resources/application.prod.properties')  
}